using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TCA2023v2_Domain;

namespace TCA2023v2_DataAccess
{ /*
     * 
     * a.	Classes implementation (above) – 
i.	Ids should be set as primary key and identity. It should be autogenerated meaning that it should be filled automatically when a new book is inserted in the database – this has to be done from the code not from the database [1];
ii.	CategoryType should be referenced in Book by means of a foreign key and a navigational field. Therefore make the required changes [1];
b.	LibraryDbContext  [1] – this should be an abstraction of the database accommodating all the requests/references in this task;
c.	BooksDbRepository – accesses/manages books entities from a relational database. Methods you should implement:
i.	AddBook – should be efficiently built; [1]
ii.	GetBook – gets only ONE book or nothing – the requested ONE; [1]
iii.	GetBooks – gets all books; method should be built in such a way that query is not executed immediately but the call is postponed to when the ToList() method is called [1]


     * */
    public class BooksDbRepository
    {
        private LibraryContext _libraryContext;
        public BooksDbRepository(LibraryContext context) {
            _libraryContext = context;
        }

        public void AddBook(Book b)
        {
            _libraryContext.Books.Add(b);
            _libraryContext.SaveChanges(); //<<<<< important
        }

        public Book GetBook(string isbn)
        {
            return _libraryContext.Books.SingleOrDefault(x=>x.Isbn == isbn);
        }

        public IQueryable<Book> GetAllBooks()
        {
            return _libraryContext.Books;
        }
    }
}
